---
name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: .
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: .
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: .
      run: terraform plan -input=false
      env:
        TF_VAR_prefix: "ut23"
        TF_VAR_instances: 1
        TF_VAR_shape: "VM.Standard.A1.Flex"
        TF_VAR_ocpu: 2
        TF_VAR_memory: 8
        TF_VAR_sec_instances: 1
        TF_VAR_sec_shape: "VM.Standard.A1.Flex"
        TF_VAR_sec_ocpus: 2
        TF_VAR_sec_memory: 8
        TF_VAR_db_shape: "VM.Standard.A1.Flex"
        TF_VAR_db_ocpus: 2
        TF_VAR_db_memory: 8
        TF_VAR_ssh_file_public_key: "secrets/id_cloud.pub"
        TF_VAR_ssh_private_key: "secrets/id_cloud"
        TF_VAR_bundle_name: "protheus_bundle.md"
        TF_VAR_tenancy_ocid: ${{ secrets.TF_TENANCY_OCID }}
        TF_VAR_user_ocid: ${{ secrets.TF_TENANCY_OCID }}
        TF_VAR_fingerprint: ${{ secrets.TF_FINGERPRINT }}
        TF_VAR_private_key: ${{ secrets.TF_PRIVATE_KEY }}
        TF_VAR_compartment_ocid: ${{ secrets.TF_COMPARTMENT_OCID }}
        TF_VAR_region: ${{ secrets.TF_REGION }}

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      working-directory: .
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        TF_VAR_prefix: "ut23"
        TF_VAR_instances: 1
        TF_VAR_shape: "VM.Standard.A1.Flex"
        TF_VAR_ocpu: 2
        TF_VAR_memory: 8
        TF_VAR_sec_instances: 1
        TF_VAR_sec_shape: "VM.Standard.A1.Flex"
        TF_VAR_sec_ocpus: 2
        TF_VAR_sec_memory: 8
        TF_VAR_db_shape: "VM.Standard.A1.Flex"
        TF_VAR_db_ocpus: 2
        TF_VAR_db_memory: 8
        TF_VAR_ssh_file_public_key: "secrets/id_cloud.pub"
        TF_VAR_ssh_private_key: "secrets/id_cloud"
        TF_VAR_bundle_name: "protheus_bundle.md"
        TF_VAR_tenancy_ocid: ${{ secrets.TF_TENANCY_OCID }}
        TF_VAR_user_ocid: ${{ secrets.TF_TENANCY_OCID }}
        TF_VAR_fingerprint: ${{ secrets.TF_FINGERPRINT }}
        TF_VAR_private_key: ${{ secrets.TF_PRIVATE_KEY }}
        TF_VAR_compartment_ocid: ${{ secrets.TF_COMPARTMENT_OCID }}
        TF_VAR_region: ${{ secrets.TF_REGION }}
